--- elfin_ethercat_driver_v2.cpp
+++ elfin_ethercat_driver_v2.cpp
@@ -116,26 +116,22 @@ ElfinEtherCATDriver::ElfinEtherCATDriver(EtherCatManager *manager, std::string d
     }
 
     // Initialize axis_torque_factors_
-    if(ed_nh_.hasParam("axis_torque_factors"))
+    if(!ed_nh_.hasParam("axis_torque_factors"))
     {
-        has_torque_mode_=true;
-        ed_nh_.getParam("axis_torque_factors", axis_torque_factors_);
-    }
-    else
-    {
-        has_torque_mode_=false;
+        ROS_ERROR("Please set the param %s/axis_torque_factors", ed_nh_.getNamespace().c_str());
+        ROS_ERROR("For more details: elfin_robot_bringup/config/elfin_drivers_example.yaml");
+        exit(0);
     }
 
+    ed_nh_.getParam("axis_torque_factors", axis_torque_factors_);
+
     // Check the values of axis torque factors
-    if(has_torque_mode_)
+    for(int i=0; i<axis_torque_factors_.size(); i++)
     {
-        for(int i=0; i<axis_torque_factors_.size(); i++)
+        if(axis_torque_factors_[i]<1)
         {
-            if(axis_torque_factors_[i]<1)
-            {
-                ROS_ERROR("axis_torque_factors[%i] is too small", i);
-                exit(0);
-            }
+            ROS_ERROR("axis_torque_factors[%i] is too small", i);
+            exit(0);
         }
     }
 
@@ -143,6 +139,7 @@ ElfinEtherCATDriver::ElfinEtherCATDriver(EtherCatManager *manager, std::string d
     if(!ed_nh_.hasParam("count_zeros"))
     {
         ROS_ERROR("Please set the param %s/count_zeros", ed_nh_.getNamespace().c_str());
+        ROS_ERROR("For more details: elfin_robot_bringup/config/elfin_drivers_example.yaml");
         exit(0);
     }
 
@@ -165,7 +162,7 @@ ElfinEtherCATDriver::ElfinEtherCATDriver(EtherCatManager *manager, std::string d
         ROS_ERROR("the number of axis position factors is %lu, it should be %lu", axis_position_factors_.size(), slave_no_.size()*2);
         exit(0);
     }
-    if(has_torque_mode_ && axis_torque_factors_.size()!=slave_no_.size()*2)
+    if(axis_torque_factors_.size()!=slave_no_.size()*2)
     {
         ROS_ERROR("the number of axis torque factors is %lu, it should be %lu", axis_torque_factors_.size(), slave_no_.size()*2);
         exit(0);
@@ -391,11 +388,6 @@ double ElfinEtherCATDriver::getAxisPositionFactor(size_t n)
     return axis_position_factors_[n];
 }
 
-bool ElfinEtherCATDriver::hasTorqueMode()
-{
-    return has_torque_mode_;
-}
-
 double ElfinEtherCATDriver::getAxisTorqueFactor(size_t n)
 {
     return axis_torque_factors_[n];
